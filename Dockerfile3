FROM mcr.microsoft.com/openjdk/jdk:17-ubuntu as runtime-build

WORKDIR /work
COPY mvnw .
COPY .mvn .mvn
COPY pom.xml .
COPY src src
RUN ./mvnw clean package -DskipTests
RUN mkdir target/extract
RUN (cd target/extract && $JAVA_HOME/bin/jar xvf ../demo-0.0.1-SNAPSHOT.jar)
RUN $JAVA_HOME/bin/jdeps \
        -q \
        --class-path "target/extract/BOOT-INF/lib/*" \
        --print-module-deps \
        --ignore-missing-deps \
        --multi-release 17 \
        --recursive \
        target/demo-0.0.1-SNAPSHOT.jar > ./deps.txt

# Create a custom Java runtime
RUN $JAVA_HOME/bin/jlink \
        --add-modules `cat deps.txt` \
        --strip-debug \
        --no-man-pages \
        --no-header-files \
        --compress=2 \
        --output /javaruntime

# Define your base image. You may use any base OS and version of your choice.
FROM debian:buster-slim
ENV LANG en_US.UTF-8
ENV JAVA_HOME /usr/lib/jvm/msopenjdk-17-amd64
ENV PATH "${JAVA_HOME}/bin:${PATH}"
COPY --from=runtime-build /javaruntime $JAVA_HOME

# Continue with your application deployment
RUN mkdir /opt/app
EXPOSE 8080
COPY target/demo-0.0.1-SNAPSHOT.jar /opt/app/japp.jar
CMD ["java", "-jar", "/opt/app/japp.jar"]